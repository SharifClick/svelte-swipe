{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\dev\\App.svelte",
    "..\\src\\Swipe.svelte",
    "..\\src\\SwipeItem.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { Swipe, SwipeItem } from \"../src/index.js\";\r\n\r\n  const swipeConfig = {\r\n    autoplay: false,\r\n    showIndicators: false,\r\n    transitionDuration: 200,\r\n    defaultIndex: 0\r\n  };\r\n\r\n  let active_item = 0; //readonly\r\n  let _active_item = 0; // used in dynamic height swipe items\r\n\r\n  let customThumbnail = false;\r\n\r\n  let SwipeComp;\r\n\r\n  function toggle() {\r\n    swipeConfig.autoplay = !swipeConfig.autoplay;\r\n  }\r\n\r\n  function sayHi() {\r\n    alert(\"Hi\");\r\n  }\r\n\r\n  function nextSlide() {\r\n    SwipeComp.nextItem();\r\n  }\r\n\r\n  function prevSlide() {\r\n    SwipeComp.prevItem();\r\n  }\r\n\r\n  function changeSlide(i) {\r\n    SwipeComp.goTo(i);\r\n  }\r\n\r\n  let images = [\r\n    \"./images/1.jpg\",\r\n    \"./images/2.jpg\",\r\n    \"./images/3.jpg\",\r\n    \"./images/4.jpg\"\r\n  ];\r\n\r\n  let dy_images = [\r\n    \"./images/dy-1.jpg\",\r\n    \"./images/dy-2.jpg\",\r\n    \"./images/dy-3.jpg\",\r\n    \"./images/dy-4.jpg\",\r\n    \"./images/dy-5.jpg\",\r\n  ];\r\n\r\n  let tabs = [\r\n    {name:'Deafult', value:'default'},\r\n    {name:'Vertical', value:'vertical'},\r\n    {name:'Allow Pointer', value:'allow-pointer'},\r\n    {name:'Dynamic Height', value:'dynamic-height'},\r\n  ];\r\n  let active_tab = 'default';\r\n\r\n  function changeTab(tab) {\r\n    active_tab = tab.value\r\n  }\r\n\r\n  let swipe_holder_height = 500;\r\n  function heightChanged({detail}) {\r\n    console.log(detail.height)\r\n    swipe_holder_height = detail.height;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --sv-swipe-indicator-active-color: white;\r\n  }\r\n  .is-stack {\r\n    height: 300px;\r\n    width: 100%;\r\n  }\r\n  .swipe-holder {\r\n    height: 30vh;\r\n    width: 100%;\r\n  }\r\n\r\n  .custom-button {\r\n    background-color: #4caf50;\r\n    border: none;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n  }\r\n  .is-center {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  img {\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  .has-pointer-event {\r\n    pointer-events: fill;\r\n  }\r\n\r\n  .github-corner:hover .octo-arm {\r\n    animation: octocat-wave 560ms ease-in-out;\r\n  }\r\n  @keyframes octocat-wave {\r\n    0%,\r\n    100% {\r\n      transform: rotate(0);\r\n    }\r\n    20%,\r\n    60% {\r\n      transform: rotate(-25deg);\r\n    }\r\n    40%,\r\n    80% {\r\n      transform: rotate(10deg);\r\n    }\r\n  }\r\n  @media (max-width: 500px) {\r\n    .github-corner:hover .octo-arm {\r\n      animation: none;\r\n    }\r\n    .github-corner .octo-arm {\r\n      animation: octocat-wave 560ms ease-in-out;\r\n    }\r\n  }\r\n  .top-buffer {\r\n    margin-top:20px;\r\n  }\r\n</style>\r\n\r\n<a\r\n  href=\"https://github.com/SharifClick/svelte-swipe\"\r\n  class=\"github-corner\"\r\n  aria-label=\"View source on GitHub\">\r\n  <svg\r\n    width=\"80\"\r\n    height=\"80\"\r\n    viewBox=\"0 0 250 250\"\r\n    style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0;\r\n    right: 0;\"\r\n    aria-hidden=\"true\">\r\n    <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\r\n    <path\r\n      d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6\r\n      120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3\r\n      125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\r\n      fill=\"currentColor\"\r\n      style=\"transform-origin: 130px 106px;\"\r\n      class=\"octo-arm\" />\r\n    <path\r\n      d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6\r\n      C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0\r\n      C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1\r\n      C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4\r\n      C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9\r\n      C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5\r\n      C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9\r\n      L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\r\n      fill=\"currentColor\"\r\n      class=\"octo-body\" />\r\n  </svg>\r\n</a>\r\n<div class=\"container\">\r\n  <div class=\"row\" style=\"margin-top:20px\">\r\n    <div class=\"col\">\r\n      <h1 class=\"text-muted\">Svelte Swipe</h1>\r\n      <p class=\"text-muted\">Swipable items wrapper component for Svelte</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <ul class=\"nav nav-tabs\">\r\n      {#each tabs as tab}\r\n        <li class=\"nav-item\" on:click={() => changeTab(tab)}>\r\n          <button class=\"nav-link {tab.value == active_tab ? 'active' : ''}\"  type=\"button\" >{tab.name}</button>\r\n        </li>\r\n      {/each}\r\n     </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"row top-buffer\">\r\n    <div class=\"col\">\r\n        <div class=\"tab-content\">\r\n          <div class=\"tab-pane fade {active_tab == 'default' ? 'show active' : ''}\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"form-check form-check-inline float-right\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    bind:checked={swipeConfig.showIndicators} />\r\n                  <label class=\"text-muted\">Built-in Indicators</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline float-right\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    bind:checked={customThumbnail} />\r\n                  <label class=\"text-muted\">Custom Thumbnail</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"swipe-holder\">\r\n                  <Swipe {...swipeConfig} bind:active_item bind:this={SwipeComp}>\r\n                    {#each images as image}\r\n                      <SwipeItem>\r\n                        <img class=\"img-fluid\" src={image} alt=\"\" />\r\n                      </SwipeItem>\r\n                    {/each}\r\n                  </Swipe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin-top:10px\">\r\n              <div class=\"col\">\r\n                <input\r\n                  class=\"btn btn-info btn-sm\"\r\n                  type=\"button\"\r\n                  on:click={toggle}\r\n                  value={swipeConfig.autoplay ? 'Stop' : 'Play'} />\r\n              </div>\r\n              {#if customThumbnail}\r\n                <div class=\"col\">\r\n                  <div class=\"is-center\">\r\n                    {#each images as image, i}\r\n                      <img\r\n                        class=\"img-fluid {active_item == i ? 'rounded' : 'img-thumbnail'}\"\r\n                        on:click={() => changeSlide(i)}\r\n                        style=\"height:30px; width:30px; cursor:pointer\"\r\n                        src={image}\r\n                        alt=\"\">\r\n                    {/each}\r\n                  </div>\r\n                </div>\r\n              {/if}\r\n              <div class=\"col\">\r\n                <div class=\"btn-group float-right\">\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-secondary btn-sm\"\r\n                    on:click={prevSlide}>\r\n                    Prev\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-secondary btn-sm\"\r\n                    on:click={nextSlide}>\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        {#if active_tab == 'vertical'}\r\n          <div class=\"tab-pane fade show active\">\r\n            <p class=\"lead\">Vertical Swipe ðŸ”¥</p>\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <div class=\"swipe-holder\">\r\n                  <Swipe is_vertical={true}>\r\n                    {#each images as image}\r\n                      <SwipeItem>\r\n                        <img class=\"img-fluid\" src={image} alt=\"\" >\r\n                      </SwipeItem>\r\n                    {/each}\r\n                  </Swipe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        {/if}\r\n        {#if active_tab == 'allow-pointer'}\r\n          <div class=\"tab-pane fade show active\">\r\n            <p class=\"lead\">Also allow pointer events inside Swipe Item</p>\r\n            <div class=\"swipe-holder\">\r\n              <Swipe>\r\n                <SwipeItem>\r\n                  <div class=\"is-stack is-center\" style=\"background:teal\">\r\n                    <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\r\n                      Say Hi\r\n                    </button>\r\n                  </div>\r\n                </SwipeItem>\r\n\r\n                <SwipeItem>\r\n                  <div class=\"is-stack is-center\" style=\"background:yellowgreen\">\r\n                    <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\r\n                      Say Hi\r\n                    </button>\r\n                  </div>\r\n                </SwipeItem>\r\n\r\n                <SwipeItem>\r\n                  <div class=\"is-stack is-center\" style=\"background:aqua\">\r\n                    <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\r\n                      Say Hi\r\n                    </button>\r\n                  </div>\r\n                </SwipeItem>\r\n\r\n                <SwipeItem>\r\n                  <div class=\"is-stack is-center\" style=\"background:lightcoral\">\r\n                    <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\r\n                      Say Hi\r\n                    </button>\r\n                  </div>\r\n                </SwipeItem>\r\n              </Swipe>\r\n            </div>\r\n          </div>\r\n        {/if}\r\n        {#if active_tab == 'dynamic-height'}\r\n          <div class=\"tab-pane fade show active\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\"> <p class=\"lead\">Dynamic height with children</p> </div>\r\n              <div class=\"col-md-6 text-right\"><p class=\"lead\">Item Height: {swipe_holder_height}</p></div>\r\n            </div>\r\n            <div class=\"swipe-holder\" style=\"height:{swipe_holder_height}px\">\r\n              <Swipe bind:active_item={_active_item}>\r\n                {#each dy_images as image, i}\r\n                  <SwipeItem active={_active_item == i} allow_dynamic_height={true} on:swipe_item_height_change={heightChanged}>\r\n                  <div class=\"text-center\" style=\"background-color:lightgrey\">\r\n                    <img class=\"img-fluid\" src={image} alt=\"\" >\r\n                  </div>\r\n                  </SwipeItem>\r\n                {/each}\r\n              </Swipe>\r\n            </div>\r\n          </div>\r\n        {/if}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n\r\n  import { onMount, onDestroy } from 'svelte';\r\n\r\n\r\n  export let transitionDuration = 200;\r\n  export let showIndicators = false;\r\n  export let autoplay = false;\r\n  export let delay = 1000;\r\n  export let defaultIndex = 0;\r\n\r\n  export let active_item = 0; //readonly\r\n  export let is_vertical = false;\r\n\r\n  let activeIndicator = 0,\r\n    indicators,\r\n    total_elements = 0,\r\n    availableSpace = 0,\r\n    availableMeasure = 0,\r\n    swipeElements,\r\n    availableDistance = 0,\r\n    swipeWrapper,\r\n    swipeHandler,\r\n    pos_axis = 0,\r\n    page_axis = is_vertical ? 'pageY' : 'pageX',\r\n    axis,\r\n    longTouch,\r\n    last_axis_pos;\r\n\r\n\r\n\r\n  let played = defaultIndex || 0;\r\n  let run_interval = false;\r\n\r\n  function init(){\r\n    swipeElements = swipeWrapper.querySelectorAll('.swipeable-item');\r\n    total_elements = swipeElements.length;\r\n    update();\r\n  }\r\n\r\n  function update(){\r\n    let {offsetWidth, offsetHeight} = swipeWrapper.querySelector('.swipeable-total_elements');\r\n    availableSpace = is_vertical ? offsetHeight : offsetWidth;\r\n     [...swipeElements].forEach((element, i) => {\r\n      element.style.transform = generateTranslateValue(availableSpace * i);\r\n    });\r\n    availableDistance = 0;\r\n    availableMeasure = availableSpace * (total_elements - 1)\r\n    if(defaultIndex){\r\n      changeItem(defaultIndex);\r\n    }\r\n  }\r\n\r\n\r\n  $: indicators = Array(total_elements);\r\n\r\n  $: {\r\n    if(autoplay && !run_interval){\r\n      run_interval = setInterval(changeView , delay);\r\n    }\r\n\r\n    if(!autoplay && run_interval){\r\n      clearInterval(run_interval)\r\n      run_interval = false;\r\n    }\r\n  }\r\n\r\n  // helpers\r\n  function eventDelegate(type) {\r\n    let delegationTypes = {\r\n      add: 'addEventListener',\r\n      remove: 'removeEventListener'\r\n    };\r\n    if (typeof window !== 'undefined') {\r\n      window[delegationTypes[type]]('mousemove', onMove);\r\n      window[delegationTypes[type]]('mouseup', onEnd);\r\n      window[delegationTypes[type]]('touchmove', onMove, {passive:false});\r\n      window[delegationTypes[type]]('touchend', onEnd, {passive:false});\r\n    }\r\n  }\r\n\r\n  function generateTranslateValue(value){\r\n    return  is_vertical ? `translate3d(0, ${value}px, 0)` : `translate3d(${value}px, 0, 0)`;\r\n  }\r\n\r\n  function generateTouchPosCss(value, touch_end = false){\r\n    let transformString = generateTranslateValue(value);\r\n    let _css = `\r\n      -webkit-transition-duration: ${touch_end ? transitionDuration : '0'}ms;\r\n      transition-duration: ${touch_end ? transitionDuration : '0'}ms;\r\n      -webkit-transform: ${transformString};\r\n      -ms-transform: ${transformString};`;\r\n    return _css;\r\n  }\r\n\r\n\r\n  onMount(() => {\r\n    init();\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('resize', update);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  onDestroy(()=>{\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener('resize', update);\r\n    }\r\n  })\r\n\r\n\r\n\r\n  let touch_active = false;\r\n\r\n  function onMove(e){\r\n    if (touch_active) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n      let _axis = e.touches ? e.touches[0][page_axis] : e[page_axis],\r\n      distance = (axis - _axis) + pos_axis;\r\n      if(((pos_axis == 0 && (axis < _axis)) || (pos_axis == availableMeasure && (axis > _axis)))){\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n\r\n      if (distance <= availableMeasure && distance >= 0) {\r\n        [...swipeElements].forEach((element, i) => {\r\n          element.style.cssText = generateTouchPosCss((availableSpace * i) - distance);\r\n        });\r\n        availableDistance = distance;\r\n        last_axis_pos = _axis;\r\n      }\r\n    }\r\n  }\r\n\r\n  function onMoveStart(e){\r\n    // e.preventDefault();\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    touch_active = true;\r\n    longTouch = false;\r\n    setTimeout(function() {\r\n      longTouch = true;\r\n    }, 250);\r\n    axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\r\n    eventDelegate('add');\r\n  }\r\n\r\n  function onEnd(e) {\r\n    if(e && e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n    e && e.stopImmediatePropagation();\r\n    e && e.stopPropagation();\r\n    let direction = axis < last_axis_pos;\r\n    touch_active = false;\r\n    let _as = availableSpace;\r\n    let accidental_touch = Math.round(availableSpace / 50) > Math.abs(axis - last_axis_pos);\r\n    if(longTouch || accidental_touch){\r\n      availableDistance = Math.round((availableDistance / _as)) * _as;\r\n    }else{\r\n      availableDistance = direction ? Math.floor((availableDistance / _as))  * _as : Math.ceil((availableDistance / _as))  * _as\r\n    }\r\n\r\n    axis = null;\r\n    last_axis_pos = null;\r\n    pos_axis = availableDistance;\r\n    activeIndicator = (availableDistance / _as);\r\n\r\n    [...swipeElements].forEach((element, i) => {\r\n      element.style.cssText = generateTouchPosCss((_as * i) - pos_axis, true);\r\n    });\r\n\r\n    active_item = activeIndicator;\r\n    defaultIndex = active_item;\r\n    eventDelegate('remove');\r\n  }\r\n\r\n  function changeItem(item) {\r\n    let max = availableSpace;\r\n    availableDistance = max * item;\r\n    activeIndicator = item;\r\n    onEnd();\r\n  }\r\n\r\n  function changeView() {\r\n    changeItem(played);\r\n    played = played < (total_elements - 1) ? ++played : 0;\r\n  }\r\n\r\n  export function goTo(step) {\r\n    let item = Math.max(0, Math.min(step, indicators.length - 1));\r\n    changeItem(item)\r\n  }\r\n  export function prevItem() {\r\n    let step = activeIndicator - 1;\r\n    goTo(step)\r\n  }\r\n\r\n  export function nextItem() {\r\n    let step = activeIndicator + 1;\r\n    goTo(step)\r\n  }\r\n</script>\r\n\r\n<style>\r\n\r\n.swipe-panel {\r\n  position: relative;\r\n  height: var(--sv-swipe-panel-height, 100%);\r\n  width: var(--sv-swipe-panel-width, inherit);\r\n}\r\n.swipe-item-wrapper{\r\n  overflow: hidden;\r\n  position: relative;\r\n  height: inherit;\r\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\r\n  pointer-events: none;\r\n}\r\n\r\n.swipeable-total_elements,\r\n.swipeable-slot-wrapper {\r\n  position: relative;\r\n  width: inherit;\r\n  height: inherit;\r\n}\r\n\r\n.swipe-handler {\r\n  width: 100%;\r\n  position: absolute;\r\n  top: var(--sv-swipe-handler-top, 0px);\r\n  bottom: 0px;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0,0,0,0);\r\n}\r\n.swipe-indicator {\r\n  position: relative;\r\n  bottom: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\r\n  pointer-events: none;\r\n}\r\n\r\n.dot {\r\n  height: 10px;\r\n  width: 10px;\r\n  background-color: transparent;\r\n  border: 1px solid grey;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin: 0px 2px;\r\n  cursor: pointer;\r\n  pointer-events: fill;\r\n}\r\n.swipe-indicator .is-active {\r\n  background-color: var(--sv-swipe-indicator-active-color, grey);\r\n}\r\n\r\n</style>\r\n<div class=\"swipe-panel\">\r\n  <div class=\"swipe-item-wrapper\" bind:this={swipeWrapper}>\r\n    <div class=\"swipeable-total_elements\">\r\n      <div class=\"swipeable-slot-wrapper\">\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"swipe-handler\" bind:this={swipeHandler} on:touchstart={onMoveStart} on:mousedown={onMoveStart}></div>\r\n   {#if showIndicators}\r\n     <div class=\"swipe-indicator swipe-indicator-inside\">\r\n        {#each indicators as x, i }\r\n          <span class=\"dot {activeIndicator == i ? 'is-active' : ''}\" on:click={() => {changeItem(i)}}></span>\r\n        {/each}\r\n    </div>\r\n   {/if}\r\n\r\n</div>\r\n",
    "<script>\r\n    import { onMount, createEventDispatcher} from 'svelte';\r\n    export let active = false;\r\n    export let classes = '';\r\n    export let style ='';\r\n    export let allow_dynamic_height = false;\r\n\r\n    let swipeItemInner = null;\r\n    let _height = 0;\r\n    const dispatch = createEventDispatcher();\r\n\r\n\r\n    function firehHeightChange(){\r\n      if(swipeItemInner){\r\n        let {scrollHeight, clientHeight} = swipeItemInner;\r\n        dispatch('swipe_item_height_change', {height: Math.max(scrollHeight, clientHeight)});\r\n      }\r\n    }\r\n\r\n    $: active, (allow_dynamic_height && active && _height && requestAnimationFrame(firehHeightChange))\r\n\r\n    onMount(() => {\r\n     setTimeout(() => {\r\n      allow_dynamic_height && requestAnimationFrame(firehHeightChange)\r\n     }, 100);\r\n    });\r\n</script>\r\n\r\n<style>\r\n  .swipeable-item {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    transition-timing-function: ease-out;\r\n  }\r\n</style>\r\n\r\n\r\n<div bind:clientHeight={_height} class=\"swipeable-item {classes} {active ? 'is-active' : ''} \" style=\"{style}\">\r\n  <div bind:this={swipeItemInner} class=\"swipeable-item-inner\">\r\n    <slot></slot>\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}