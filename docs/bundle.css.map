{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Swipe.svelte",
    "../SwipeItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Swipe, SwipeItem } from \"../src/index.js\";\n\n  const swipeConfig = {\n    autoplay: false,\n    showIndicators: false,\n    transitionDuration: 200,\n    defaultIndex: 0,\n  };\n\n  let active_item = 0; //readonly\n\n  let customThumbnail = false;\n\n  let SwipeComp;\n\n  function toggle() {\n    autoplay = !autoplay;\n  }\n\n  function sayHi() {\n    alert(\"Hi\");\n  }\n\n  function nextSlide() {\n    SwipeComp.nextItem();\n  }\n\n  function prevSlide() {\n    SwipeComp.prevItem();\n  }\n\n  function changeSlide(i) {\n    SwipeComp.goTo(i);\n  }\n\n  let images = [\n    \"./images/1.jpg\",\n    \"./images/2.jpg\",\n    \"./images/3.jpg\",\n    \"./images/4.jpg\",\n  ];\n</script>\n\n<style>\n  :root {\n    --sv-swipe-indicator-active-color: white;\n  }\n  .is-stack {\n    height: 100%;\n    width: 100%;\n  }\n  .swipe-holder {\n    height: 30vh;\n    width: 100%;\n  }\n\n  .custom-button {\n    background-color: #4caf50;\n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n  }\n  .is-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n  .has-pointer-event {\n    pointer-events: fill;\n  }\n</style>\n\n<div class=\"container\">\n\n  <div class=\"row\" style=\"margin-top:20px\">\n    <div class=\"col\">\n      <h1 class=\"text-muted\">Svelte Swipe</h1>\n      <p class=\"text-muted\">Swipable items wrapper component for Svelte</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"form-check form-check-inline float-right\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          bind:checked={swipeConfig.showIndicators} />\n        <label class=\"text-muted\">Built-in Indicators</label>\n      </div>\n      <div class=\"form-check form-check-inline float-right\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          bind:checked={customThumbnail} />\n        <label class=\"text-muted\">Custom Thumbnail</label>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"swipe-holder\">\n        <Swipe {...swipeConfig} bind:active_item bind:this={SwipeComp}>\n          {#each images as image}\n            <SwipeItem>\n              <img class=\"img-fluid\" src={image} alt=\"\" />\n            </SwipeItem>\n          {/each}\n        </Swipe>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" style=\"margin-top:10px\">\n    <div class=\"col\">\n      <input\n        class=\"btn btn-info btn-sm\"\n        type=\"button\"\n        on:click={toggle}\n        value={swipeConfig.autoplay ? 'Stop' : 'Play'} />\n    </div>\n    {#if customThumbnail}\n      <div class=\"col\">\n        <div class=\"is-center\">\n          {#each images as image, i}\n            <img\n              class=\"img-fluid {active_item == i ? 'rounded' : 'img-thumbnail'}\"\n              on:click={() => changeSlide(i)}\n              style=\"height:30px; width:30px; cursor:pointer\"\n              src={image}\n              alt=\"\" />\n          {/each}\n        </div>\n      </div>\n    {/if}\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-sm\"\n          on:click={prevSlide}>\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-sm\"\n          on:click={nextSlide}>\n          Next\n        </button>\n      </div>\n    </div>\n\n  </div>\n  <hr />\n  <p class=\"text-muted\">Vertical Swipe ðŸ”¥</p>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"swipe-holder\">\n        <Swipe is_vertical={true}>\n          {#each images as image}\n            <SwipeItem>\n              <img class=\"img-fluid\" src={image} alt=\"\" />\n            </SwipeItem>\n          {/each}\n        </Swipe>\n      </div>\n    </div>\n  </div>\n\n  <hr />\n  <p class=\"text-muted\">Also allow pointer events inside Swipe Item</p>\n  <div class=\"swipe-holder\">\n    <Swipe>\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:teal\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:yellowgreen\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:aqua\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:lightcoral\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n    </Swipe>\n  </div>\n\n  <div class=\"row mt-3\" />\n</div>\n",
    "<script>\n\n  import { onMount, onDestroy } from 'svelte';\n\n\n  export let transitionDuration = 200;\n  export let showIndicators = false;\n  export let autoplay = false;\n  export let delay = 1000;\n  export let defaultIndex = 0;\n\n  export let active_item = 0; //readonly\n  export let is_vertical = false;\n\n  let activeIndicator = 0,\n    indicators,\n    items = 0,\n    availableSpace = 0,\n    topClearence = 0,\n    elems,\n    diff = 0,\n    swipeWrapper,\n    swipeHandler,\n\n    min = 0,\n    transformString = is_vertical ? 'translate3d(0, -{{val}}px, 0)' : 'translate3d(-{{val}}px, 0, 0)',\n\n    touchingTpl = `\n    -webkit-transition-duration: 0s;\n    transition-duration: 0s;\n    -webkit-transform: ${transformString};\n    -ms-transform: ${transformString};`,\n\n    non_touchingTpl = `\n    -webkit-transition-duration: ${transitionDuration}ms;\n    transition-duration: ${transitionDuration}ms;\n    -webkit-transform: ${transformString};\n    -ms-transform: ${transformString};`,\n\n    touching = false,\n    pos_axis = 0,\n    page_axis = is_vertical ? 'pageY' : 'pageX',\n    dir = 0,\n    axis;\n\n\n\n  let played = defaultIndex || 0;\n  let run_interval = false;\n\n  $: indicators = Array(items);\n\n  $: {\n    if(autoplay && !run_interval){\n      run_interval = setInterval(changeView , delay);\n    }\n\n    if(!autoplay && run_interval){\n      clearInterval(run_interval)\n      run_interval = false;\n    }\n  }\n\n\n  function update(){\n    swipeHandler.style.top = topClearence + 'px';\n    let {offsetWidth, offsetHeight} = swipeWrapper.querySelector('.swipeable-items');\n    availableSpace = is_vertical ? offsetHeight : offsetWidth;\n    for (let i = 0; i < items; i++) {\n      let _transformValue = (availableSpace * i)+'px';\n      let _transformString = is_vertical ? `translate3d(0, ${_transformValue}, 0)` :`translate3d(${_transformValue}, 0, 0)`;\n      elems[i].style.transform = _transformString;\n    }\n    diff = 0;\n    if(defaultIndex){\n      changeItem(defaultIndex);\n    }\n  }\n\n  function init(){\n    elems = swipeWrapper.querySelectorAll('.swipeable-item');\n    items = elems.length;\n    update();\n  }\n\n  onMount(() => {\n    init();\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', update);\n    }\n  });\n\n\n\n  onDestroy(()=>{\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', update);\n    }\n  })\n\n  function moveHandler(e){\n    if (touching) {\n      e.stopImmediatePropagation();\n      e.stopPropagation();\n\n\n      let max = availableSpace;\n\n      let _axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\n      let _diff = (axis - _axis) + pos_axis;\n      let dir = _axis > axis ? 0 : 1;\n      if (!dir) { _diff = pos_axis - (_axis - axis) }\n      if (_diff <= (max * (items - 1)) && _diff >= min) {\n\n        for (let i = 0; i < items; i++) {\n          let template = i < 0 ? '{{val}}' : '-{{val}}';\n          let _value = (max * i) - _diff;\n          elems[i].style.cssText = touchingTpl.replace(template, _value).replace(template, _value);\n        }\n\n        diff = _diff;\n      }\n\n    }\n  }\n\n  function endHandler(e) {\n    e && e.stopImmediatePropagation();\n    e && e.stopPropagation();\n    e && e.preventDefault();\n\n    let max = availableSpace;\n\n    touching = false;\n    axis = null;\n\n\n\n    let swipe_threshold = 0.85;\n    let d_max = (diff / max);\n    let _target = Math.round(d_max);\n\n    if(Math.abs(_target - d_max) < swipe_threshold ){\n      diff = _target * max;\n    }else{\n      diff = (dir ? (_target - 1) : (_target + 1)) * max;\n    }\n\n    pos_axis = diff;\n    activeIndicator = (diff / max);\n    for (let i = 0; i < items; i++) {\n      let template = i < 0 ? '{{val}}' : '-{{val}}';\n      let _value = (max * i) - pos_axis;\n      elems[i].style.cssText = non_touchingTpl.replace(template, _value).replace(template, _value);\n    }\n    active_item = activeIndicator;\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mousemove', moveHandler);\n      window.removeEventListener('mouseup', endHandler);\n      window.removeEventListener('touchmove', moveHandler);\n      window.removeEventListener('touchend', endHandler);\n    }\n  }\n\n  function moveStart(e){\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n\n    let max = availableSpace;\n\n    touching = true;\n    axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\n    if (typeof window !== 'undefined') {\n      window.addEventListener('mousemove', moveHandler);\n      window.addEventListener('mouseup', endHandler);\n      window.addEventListener('touchmove', moveHandler);\n      window.addEventListener('touchend', endHandler);\n    }\n  }\n\n  function changeItem(item) {\n    let max = availableSpace;\n    diff = max * item;\n    activeIndicator = item;\n    endHandler();\n  }\n\n  function changeView() {\n    changeItem(played);\n    played = played < (items - 1) ? ++played : 0;\n  }\n\n  export function goTo(step) {\n    let item = Math.max(0, Math.min(step, indicators.length - 1));\n    changeItem(item)\n  }\n  export function prevItem() {\n    let step = activeIndicator - 1;\n    goTo(step)\n  }\n\n  export function nextItem() {\n    let step = activeIndicator + 1;\n    goTo(step)\n  }\n\n</script>\n\n<style>\n\n.swipe-panel {\n  position: relative;\n  height: var(--sv-swipe-panel-height, 100%);\n  width: var(--sv-swipe-panel-width, inherit);\n}\n.swipe-item-wrapper{\n  overflow: hidden;\n  position: relative;\n  height: inherit;\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\n  pointer-events: none;\n}\n\n.swipeable-items,\n.swipeable-slot-wrapper {\n  position: relative;\n  width: inherit;\n  height: inherit;\n}\n\n.swipe-handler {\n  width: 100%;\n  position: absolute;\n  top: 40px;\n  bottom: 0px;\n  left: 0;\n  right: 0;\n  background: rgba(0,0,0,0);\n}\n.swipe-indicator {\n  position: relative;\n  bottom: 1.5rem;\n  display: flex;\n  justify-content: center;\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\n  pointer-events: none;\n}\n\n.dot {\n  height: 10px;\n  width: 10px;\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 50%;\n  display: inline-block;\n  margin: 0px 2px;\n  cursor: pointer;\n  pointer-events: fill;\n}\n.swipe-indicator .is-active {\n  background-color: var(--sv-swipe-indicator-active-color, grey);\n}\n\n</style>\n<div class=\"swipe-panel\">\n  <div class=\"swipe-item-wrapper\" bind:this={swipeWrapper}>\n    <div class=\"swipeable-items\">\n      <div class=\"swipeable-slot-wrapper\">\n        <slot />\n      </div>\n    </div>\n  </div>\n  <div class=\"swipe-handler\" bind:this={swipeHandler} on:touchstart={moveStart} on:mousedown={moveStart}></div>\n   {#if showIndicators}\n     <div class=\"swipe-indicator swipe-indicator-inside\">\n        {#each indicators as x, i }\n          <span class=\"dot {activeIndicator == i ? 'is-active' : ''}\" on:click={() => {changeItem(i)}}></span>\n        {/each}\n    </div>\n   {/if}\n\n</div>\n",
    "<script>\n  export let classes = '';\n</script>\n\n<style>\n  .swipeable-item {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transition-timing-function: ease-out;\n  }\n</style>\n\n<div class=\"swipeable-item {classes}\">\n    <slot />\n</div>"
  ],
  "names": [],
  "mappings": "AA6CE,KAAK,AAAC,CAAC,AACL,iCAAiC,CAAE,KAAK,AAC1C,CAAC,AACD,SAAS,cAAC,CAAC,AACT,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,aAAa,cAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,cAAc,cAAC,CAAC,AACd,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,GAAG,cAAC,CAAC,AACH,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AACD,kBAAkB,cAAC,CAAC,AAClB,cAAc,CAAE,IAAI,AACtB,CAAC;ACqIH,YAAY,4BAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAC1C,KAAK,CAAE,IAAI,sBAAsB,CAAC,QAAQ,CAAC,AAC7C,CAAC,AACD,+CAAmB,CAAC,AAClB,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,8BAA8B,CAAC,EAAE,CAAC,CAC/C,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,4CAAgB,CAChB,uBAAuB,4BAAC,CAAC,AACvB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,cAAc,4BAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAC3B,CAAC,AACD,gBAAgB,4BAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,8BAA8B,CAAC,EAAE,CAAC,CAC/C,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,IAAI,4BAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,GAAG,CAAC,GAAG,CACf,MAAM,CAAE,OAAO,CACf,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,8BAAgB,CAAC,UAAU,cAAC,CAAC,AAC3B,gBAAgB,CAAE,IAAI,iCAAiC,CAAC,KAAK,CAAC,AAChE,CAAC;ACjQC,eAAe,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,0BAA0B,CAAE,QAAQ,AACtC,CAAC"
}