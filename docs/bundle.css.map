{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\dev\\App.svelte",
    "..\\src\\Swipe.svelte",
    "..\\src\\SwipeItem.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { Swipe, SwipeItem } from \"../src/index.js\";\r\n\r\n  const swipeConfig = {\r\n    autoplay: false,\r\n    showIndicators: false,\r\n    transitionDuration: 200,\r\n    defaultIndex: 0,\r\n  };\r\n\r\n  let active_item = 0; //readonly\r\n\r\n\r\n  let customThumbnail = false;\r\n\r\n  let SwipeComp;\r\n\r\n  function toggle(){\r\n    swipeConfig.autoplay = !swipeConfig.autoplay;\r\n  }\r\n\r\n  function sayHi(){\r\n    alert('Hi')\r\n  }\r\n\r\n  function nextSlide(){\r\n   SwipeComp.nextItem()\r\n  }\r\n\r\n  function prevSlide(){\r\n    SwipeComp.prevItem()\r\n  }\r\n\r\n   function changeSlide(i){\r\n    SwipeComp.goTo(i)\r\n  }\r\n\r\n  let images = [\r\n    \"./images/1.jpg\",\r\n    \"./images/2.jpg\",\r\n    \"./images/3.jpg\",\r\n    \"./images/4.jpg\"\r\n  ];\r\n\r\n</script>\r\n\r\n<style>\r\n  :root{\r\n    --sv-swipe-indicator-active-color:white;\r\n  }\r\n  .is-stack{\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .swipe-holder{\r\n    height: 30vh;\r\n    width: 100%;\r\n  }\r\n\r\n  .custom-button{\r\n    background-color: #4CAF50;\r\n    border: none;\r\n    color: white;\r\n    padding: 15px 32px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    font-size: 16px;\r\n  }\r\n  .is-center{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  img{\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  .has-pointer-event{\r\n    pointer-events:fill;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" >\r\n\r\n  <div class=\"row\" style=\"margin-top:20px\">\r\n    <div class=\"col\">\r\n      <h1 class=\"text-muted\">Svelte Swipe</h1>\r\n      <p class=\"text-muted\">Swipable items wrapper component for Svelte</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n    <div class=\"form-check form-check-inline float-right\">\r\n      <input class=\"form-check-input\" type=\"checkbox\"  bind:checked={swipeConfig.showIndicators}>\r\n      <label class=\"text-muted\">\r\n        Built-in Indicators\r\n      </label>\r\n    </div>\r\n    <div class=\"form-check form-check-inline float-right\">\r\n      <input class=\"form-check-input\" type=\"checkbox\"  bind:checked={customThumbnail}>\r\n      <label class=\"text-muted\">\r\n        Custom Thumbnail\r\n      </label>\r\n    </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div class=\"swipe-holder\">\r\n        <Swipe {...swipeConfig} bind:active_item bind:this={SwipeComp}>\r\n          {#each images as image}\r\n            <SwipeItem>\r\n              <img class=\"img-fluid\" src={image} alt=\"\">\r\n            </SwipeItem>\r\n          {/each}\r\n        </Swipe>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\" style=\"margin-top:10px\">\r\n    <div class=\"col\">\r\n      <input\r\n        class=\"btn btn-info btn-sm\"\r\n        type=\"button\"\r\n        on:click={toggle}\r\n        value={swipeConfig.autoplay ? 'Stop' : 'Play'} />\r\n    </div>\r\n    {#if customThumbnail}\r\n      <div class=\"col\">\r\n        <div class=\"is-center\">\r\n          {#each images as image, i}\r\n            <img class=\"img-fluid {active_item == i ? 'rounded' : 'img-thumbnail'}\" on:click={() => changeSlide(i)} style=\"height:30px; width:30px; cursor:pointer\" src={image} alt=\"\">\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    {/if}\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-right\">\r\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" on:click={prevSlide}>Prev</button>\r\n        <button type=\"button\" class=\"btn btn-secondary btn-sm\" on:click={nextSlide}>Next</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n    <hr>\r\n  <p class=\"text-muted\">Vertical Swipe ðŸ”¥</p>\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div class=\"swipe-holder\">\r\n        <Swipe is_vertical={true} >\r\n          {#each images as image}\r\n            <SwipeItem>\r\n              <img class=\"img-fluid\" src={image} alt=\"\">\r\n            </SwipeItem>\r\n          {/each}\r\n        </Swipe>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <hr>\r\n  <p class=\"text-muted\">Also allow pointer events inside Swipe Item</p>\r\n  <div class=\"swipe-holder\">\r\n    <Swipe>\r\n      <SwipeItem>\r\n        <div class=\"is-stack is-center\" style=\"background:teal\">\r\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>Say Hi</button>\r\n        </div>\r\n      </SwipeItem>\r\n\r\n      <SwipeItem>\r\n        <div class=\"is-stack is-center\" style=\"background:yellowgreen\">\r\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>Say Hi</button>\r\n        </div>\r\n      </SwipeItem>\r\n\r\n      <SwipeItem>\r\n        <div class=\"is-stack is-center\" style=\"background:aqua\">\r\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>Say Hi</button>\r\n        </div>\r\n      </SwipeItem>\r\n\r\n      <SwipeItem>\r\n        <div class=\"is-stack is-center\" style=\"background:lightcoral\">\r\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>Say Hi</button>\r\n        </div>\r\n      </SwipeItem>\r\n    </Swipe>\r\n  </div>\r\n\r\n  <div class=\"row mt-3\">\r\n\r\n  </div>\r\n</div>\r\n\r\n",
    "<script>\r\n\r\n  import { onMount, onDestroy } from 'svelte';\r\n\r\n\r\n  export let transitionDuration = 200;\r\n  export let showIndicators = false;\r\n  export let autoplay = false;\r\n  export let delay = 1000;\r\n  export let defaultIndex = 0;\r\n\r\n  export let active_item = 0; //readonly\r\n  export let is_vertical = false;\r\n\r\n  let activeIndicator = 0,\r\n    indicators,\r\n    items = 0,\r\n    availableSpace = 0,\r\n    topClearence = 0,\r\n    elems,\r\n    diff = 0,\r\n    swipeWrapper,\r\n    swipeHandler,\r\n\r\n    min = 0,\r\n    transformString = is_vertical ? 'translate3d(0, -{{val}}px, 0)' : 'translate3d(-{{val}}px, 0, 0)',\r\n\r\n    touchingTpl = `\r\n    -webkit-transition-duration: 0s;\r\n    transition-duration: 0s;\r\n    -webkit-transform: ${transformString};\r\n    -ms-transform: ${transformString};`,\r\n\r\n    non_touchingTpl = `\r\n    -webkit-transition-duration: ${transitionDuration}ms;\r\n    transition-duration: ${transitionDuration}ms;\r\n    -webkit-transform: ${transformString};\r\n    -ms-transform: ${transformString};`,\r\n\r\n    touching = false,\r\n    pos_axis = 0,\r\n    page_axis = is_vertical ? 'pageY' : 'pageX',\r\n    dir = 0,\r\n    axis;\r\n\r\n\r\n\r\n  let played = defaultIndex || 0;\r\n  let run_interval = false;\r\n\r\n  $: indicators = Array(items);\r\n\r\n  $: {\r\n    if(autoplay && !run_interval){\r\n      run_interval = setInterval(changeView , delay);\r\n    }\r\n\r\n    if(!autoplay && run_interval){\r\n      clearInterval(run_interval)\r\n      run_interval = false;\r\n    }\r\n  }\r\n\r\n\r\n  function update(){\r\n    swipeHandler.style.top = topClearence + 'px';\r\n    let {offsetWidth, offsetHeight} = swipeWrapper.querySelector('.swipeable-items');\r\n    availableSpace = is_vertical ? offsetHeight : offsetWidth;\r\n    for (let i = 0; i < items; i++) {\r\n      let _transformValue = (availableSpace * i)+'px';\r\n      let _transformString = is_vertical ? `translate3d(0, ${_transformValue}, 0)` :`translate3d(${_transformValue}, 0, 0)`;\r\n      elems[i].style.transform = _transformString;\r\n    }\r\n    diff = 0;\r\n    if(defaultIndex){\r\n      changeItem(defaultIndex);\r\n    }\r\n  }\r\n\r\n  function init(){\r\n    elems = swipeWrapper.querySelectorAll('.swipeable-item');\r\n    items = elems.length;\r\n    update();\r\n  }\r\n\r\n  onMount(() => {\r\n    init();\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('resize', update);\r\n    }\r\n  });\r\n\r\n\r\n\r\n  onDestroy(()=>{\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener('resize', update);\r\n    }\r\n  })\r\n\r\n  function moveHandler(e){\r\n    if (touching) {\r\n      e.stopImmediatePropagation();\r\n      e.stopPropagation();\r\n\r\n\r\n      let max = availableSpace;\r\n\r\n      let _axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\r\n      let _diff = (axis - _axis) + pos_axis;\r\n      let dir = _axis > axis ? 0 : 1;\r\n      if (!dir) { _diff = pos_axis - (_axis - axis) }\r\n      if (_diff <= (max * (items - 1)) && _diff >= min) {\r\n\r\n        for (let i = 0; i < items; i++) {\r\n          let template = i < 0 ? '{{val}}' : '-{{val}}';\r\n          let _value = (max * i) - _diff;\r\n          elems[i].style.cssText = touchingTpl.replace(template, _value).replace(template, _value);\r\n        }\r\n\r\n        diff = _diff;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  function endHandler(e) {\r\n    e && e.stopImmediatePropagation();\r\n    e && e.stopPropagation();\r\n    e && e.preventDefault();\r\n\r\n    let max = availableSpace;\r\n\r\n    touching = false;\r\n    axis = null;\r\n\r\n\r\n\r\n    let swipe_threshold = 0.85;\r\n    let d_max = (diff / max);\r\n    let _target = Math.round(d_max);\r\n\r\n    if(Math.abs(_target - d_max) < swipe_threshold ){\r\n      diff = _target * max;\r\n    }else{\r\n      diff = (dir ? (_target - 1) : (_target + 1)) * max;\r\n    }\r\n\r\n    pos_axis = diff;\r\n    activeIndicator = (diff / max);\r\n    for (let i = 0; i < items; i++) {\r\n      let template = i < 0 ? '{{val}}' : '-{{val}}';\r\n      let _value = (max * i) - pos_axis;\r\n      elems[i].style.cssText = non_touchingTpl.replace(template, _value).replace(template, _value);\r\n    }\r\n    active_item = activeIndicator;\r\n    if (typeof window !== 'undefined') {\r\n      window.removeEventListener('mousemove', moveHandler);\r\n      window.removeEventListener('mouseup', endHandler);\r\n      window.removeEventListener('touchmove', moveHandler);\r\n      window.removeEventListener('touchend', endHandler);\r\n    }\r\n  }\r\n\r\n  function moveStart(e){\r\n    e.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    let max = availableSpace;\r\n\r\n    touching = true;\r\n    axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\r\n    if (typeof window !== 'undefined') {\r\n      window.addEventListener('mousemove', moveHandler);\r\n      window.addEventListener('mouseup', endHandler);\r\n      window.addEventListener('touchmove', moveHandler);\r\n      window.addEventListener('touchend', endHandler);\r\n    }\r\n  }\r\n\r\n  function changeItem(item) {\r\n    let max = availableSpace;\r\n    diff = max * item;\r\n    activeIndicator = item;\r\n    endHandler();\r\n  }\r\n\r\n  function changeView() {\r\n    changeItem(played);\r\n    played = played < (items - 1) ? ++played : 0;\r\n  }\r\n\r\n  export function goTo(step) {\r\n    let item = Math.max(0, Math.min(step, indicators.length - 1));\r\n    changeItem(item)\r\n  }\r\n  export function prevItem() {\r\n    let step = activeIndicator - 1;\r\n    goTo(step)\r\n  }\r\n\r\n  export function nextItem() {\r\n    let step = activeIndicator + 1;\r\n    goTo(step)\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n.swipe-panel {\r\n  position: relative;\r\n  height: var(--sv-swipe-panel-height, 100%);\r\n  width: var(--sv-swipe-panel-width, inherit);\r\n}\r\n.swipe-item-wrapper{\r\n  overflow: hidden;\r\n  position: relative;\r\n  height: inherit;\r\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\r\n  pointer-events: none;\r\n}\r\n\r\n.swipeable-items,\r\n.swipeable-slot-wrapper {\r\n  position: relative;\r\n  width: inherit;\r\n  height: inherit;\r\n}\r\n\r\n.swipe-handler {\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 40px;\r\n  bottom: 0px;\r\n  left: 0;\r\n  right: 0;\r\n  background: rgba(0,0,0,0);\r\n}\r\n.swipe-indicator {\r\n  position: relative;\r\n  bottom: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\r\n  pointer-events: none;\r\n}\r\n\r\n.dot {\r\n  height: 10px;\r\n  width: 10px;\r\n  background-color: transparent;\r\n  border: 1px solid grey;\r\n  border-radius: 50%;\r\n  display: inline-block;\r\n  margin: 0px 2px;\r\n  cursor: pointer;\r\n  pointer-events: fill;\r\n}\r\n.swipe-indicator .is-active {\r\n  background-color: var(--sv-swipe-indicator-active-color, grey);\r\n}\r\n\r\n</style>\r\n<div class=\"swipe-panel\">\r\n  <div class=\"swipe-item-wrapper\" bind:this={swipeWrapper}>\r\n    <div class=\"swipeable-items\">\r\n      <div class=\"swipeable-slot-wrapper\">\r\n        <slot />\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"swipe-handler\" bind:this={swipeHandler} on:touchstart={moveStart} on:mousedown={moveStart}></div>\r\n   {#if showIndicators}\r\n     <div class=\"swipe-indicator swipe-indicator-inside\">\r\n        {#each indicators as x, i }\r\n          <span class=\"dot {activeIndicator == i ? 'is-active' : ''}\" on:click={() => {changeItem(i)}}></span>\r\n        {/each}\r\n    </div>\r\n   {/if}\r\n\r\n</div>\r\n",
    "<script>\r\n  export let classes = '';\r\n</script>\r\n\r\n<style>\r\n  .swipeable-item {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    transition-timing-function: ease-out;\r\n  }\r\n</style>\r\n\r\n<div class=\"swipeable-item {classes}\">\r\n    <slot />\r\n</div>"
  ],
  "names": [],
  "mappings": "AA+CE,KAAK,CAAC,AACJ,kCAAkC,KAAK,AACzC,CAAC,AACD,uBAAS,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AACD,2BAAa,CAAC,AACZ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,4BAAc,CAAC,AACb,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,UAAU,CAAE,MAAM,CAClB,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,wBAAU,CAAC,AACT,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,iBAAG,CAAC,AACF,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AACD,gCAAkB,CAAC,AACjB,eAAe,IAAI,AACrB,CAAC;ACmIH,YAAY,cAAC,CAAC,AACZ,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,uBAAuB,CAAC,KAAK,CAAC,CAC1C,KAAK,CAAE,IAAI,sBAAsB,CAAC,QAAQ,CAAC,AAC7C,CAAC,AACD,iCAAmB,CAAC,AAClB,QAAQ,CAAE,MAAM,CAChB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,8BAA8B,CAAC,EAAE,CAAC,CAC/C,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,8BAAgB,CAChB,uBAAuB,cAAC,CAAC,AACvB,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,cAAc,cAAC,CAAC,AACd,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,MAAM,CAAE,GAAG,CACX,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAC3B,CAAC,AACD,gBAAgB,cAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,MAAM,CACd,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IAAI,8BAA8B,CAAC,EAAE,CAAC,CAC/C,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,YAAY,CACrB,MAAM,CAAE,GAAG,CAAC,GAAG,CACf,MAAM,CAAE,OAAO,CACf,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,8BAAgB,CAAC,UAAU,cAAC,CAAC,AAC3B,gBAAgB,CAAE,IAAI,iCAAiC,CAAC,KAAK,CAAC,AAChE,CAAC;ACjQC,eAAe,cAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,0BAA0B,CAAE,QAAQ,AACtC,CAAC"
}