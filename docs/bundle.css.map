{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Swipe.svelte",
    "../SwipeItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Swipe, SwipeItem } from \"../src/index.js\";\n\n  const swipeConfig = {\n    autoplay: false,\n    showIndicators: false,\n    transitionDuration: 200,\n    defaultIndex: 0,\n    direction_reverse: false\n  };\n\n  let active_item = 0; //readonly\n\n  let customThumbnail = false;\n\n  let SwipeComp;\n\n  function toggle() {\n    swipeConfig.autoplay = !swipeConfig.autoplay;\n  }\n\n  function sayHi() {\n    alert(\"Hi\");\n  }\n\n  function nextSlide() {\n    SwipeComp.nextItem();\n  }\n\n  function prevSlide() {\n    SwipeComp.prevItem();\n  }\n\n  function changeSlide(i) {\n    SwipeComp.goTo(i);\n  }\n\n  let images = [\n    \"./images/1.jpg\",\n    \"./images/2.jpg\",\n    \"./images/3.jpg\",\n    \"./images/4.jpg\"\n  ];\n</script>\n\n<style>\n  :root {\n    --sv-swipe-indicator-active-color: white;\n  }\n  .is-stack {\n    height: 100%;\n    width: 100%;\n  }\n  .swipe-holder {\n    height: 30vh;\n    width: 100%;\n  }\n\n  .custom-button {\n    background-color: #4caf50;\n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n  }\n  .is-center {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  img {\n    max-width: 100%;\n    height: auto;\n  }\n  .has-pointer-event {\n    pointer-events: fill;\n  }\n\n  .github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n  @keyframes octocat-wave {\n    0%,\n    100% {\n      transform: rotate(0);\n    }\n    20%,\n    60% {\n      transform: rotate(-25deg);\n    }\n    40%,\n    80% {\n      transform: rotate(10deg);\n    }\n  }\n  @media (max-width: 500px) {\n    .github-corner:hover .octo-arm {\n      animation: none;\n    }\n    .github-corner .octo-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n  }\n</style>\n\n<a\n  href=\"https://github.com/SharifClick/svelte-swipe\"\n  class=\"github-corner\"\n  aria-label=\"View source on GitHub\">\n  <svg\n    width=\"80\"\n    height=\"80\"\n    viewBox=\"0 0 250 250\"\n    style=\"fill:#151513; color:#fff; position: absolute; top: 0; border: 0;\n    right: 0;\"\n    aria-hidden=\"true\">\n    <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n    <path\n      d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6\n      120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3\n      125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      fill=\"currentColor\"\n      style=\"transform-origin: 130px 106px;\"\n      class=\"octo-arm\" />\n    <path\n      d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6\n      C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0\n      C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1\n      C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4\n      C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9\n      C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5\n      C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9\n      L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      fill=\"currentColor\"\n      class=\"octo-body\" />\n  </svg>\n</a>\n<div class=\"container\">\n  <div class=\"row\" style=\"margin-top:20px\">\n    <div class=\"col\">\n      <h1 class=\"text-muted\">Svelte Swipe</h1>\n      <p class=\"text-muted\">Swipable items wrapper component for Svelte</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"form-check form-check-inline float-right\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          bind:checked={swipeConfig.showIndicators} />\n        <label class=\"text-muted\">Built-in Indicators</label>\n      </div>\n      <div class=\"form-check form-check-inline float-right\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          bind:checked={customThumbnail} />\n        <label class=\"text-muted\">Custom Thumbnail</label>\n      </div>\n      <div class=\"form-check form-check-inline float-right\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          bind:checked={swipeConfig.direction_reverse} />\n        <label class=\"text-muted\">Direaction Reverse</label>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"swipe-holder\">\n        <Swipe {...swipeConfig} bind:active_item bind:this={SwipeComp}>\n          {#each images as image}\n            <SwipeItem>\n              <img class=\"img-fluid\" src={image} alt=\"\" />\n            </SwipeItem>\n          {/each}\n        </Swipe>\n      </div>\n    </div>\n  </div>\n  <div class=\"row\" style=\"margin-top:10px\">\n    <div class=\"col\">\n      <input\n        class=\"btn btn-info btn-sm\"\n        type=\"button\"\n        on:click={toggle}\n        value={swipeConfig.autoplay ? 'Stop' : 'Play'} />\n    </div>\n    {#if customThumbnail}\n      <div class=\"col\">\n        <div class=\"is-center\" style={swipeConfig.direction_reverse ? \"direction:rtl\" : \"direction:ltr\"}>\n          {#each images as image, i}\n            <img\n              class=\"img-fluid {active_item == i ? 'rounded' : 'img-thumbnail'}\"\n              on:click={() => changeSlide(i)}\n              style=\"height:30px; width:30px; cursor:pointer\"\n              src={image}\n              alt=\"\">\n          {/each}\n        </div>\n      </div>\n    {/if}\n    <div class=\"col\">\n      <div class=\"btn-group float-right\">\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-sm\"\n          on:click={prevSlide}>\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary btn-sm\"\n          on:click={nextSlide}>\n          Next\n        </button>\n      </div>\n    </div>\n\n  </div>\n  <hr />\n  <p class=\"text-muted\">Vertical Swipe ðŸ”¥</p>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"swipe-holder\">\n        <Swipe is_vertical={true}>\n          {#each images as image}\n            <SwipeItem>\n              <img class=\"img-fluid\" src={image} alt=\"\" >\n            </SwipeItem>\n          {/each}\n        </Swipe>\n      </div>\n    </div>\n  </div>\n\n  <hr />\n  <p class=\"text-muted\">Also allow pointer events inside Swipe Item</p>\n  <div class=\"swipe-holder\">\n    <Swipe>\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:teal\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:yellowgreen\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:aqua\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n\n      <SwipeItem>\n        <div class=\"is-stack is-center\" style=\"background:lightcoral\">\n          <button class=\"custom-button has-pointer-event\" on:click={sayHi}>\n            Say Hi\n          </button>\n        </div>\n      </SwipeItem>\n    </Swipe>\n  </div>\n\n  <div class=\"row mt-3\" />\n</div>\n",
    "<script>\n\n  import { onMount, onDestroy } from 'svelte';\n\n\n  export let transitionDuration = 200;\n  export let showIndicators = false;\n  export let autoplay = false;\n  export let delay = 1000;\n  export let defaultIndex = 0;\n\n  export let active_item = 0; //readonly\n  export let is_vertical = false;\n  export let direction_reverse = false;\n\n  let activeIndicator = 0,\n    indicators,\n    total_elements = 0,\n    availableSpace = 0,\n    availableWidth = 0,\n    swipeElements,\n    availableDistance = 0,\n    swipeWrapper,\n    swipeHandler,\n    pos_axis = 0,\n    page_axis = is_vertical ? 'pageY' : 'pageX',\n    axis,\n    longTouch,\n    last_axis_pos;\n\n\n\n  let played = defaultIndex || 0;\n  let run_interval = false;\n\n  function init(){\n    swipeElements = swipeWrapper.querySelectorAll('.swipeable-item');\n    total_elements = swipeElements.length;\n    update();\n  }\n\n  function update(){\n    let {offsetWidth, offsetHeight} = swipeWrapper.querySelector('.swipeable-total_elements');\n    availableSpace = is_vertical ? offsetHeight : offsetWidth;\n     [...swipeElements].forEach((element, i) => {\n      element.style.transform = generateTranslateValue(availableSpace * i);\n    });\n    availableDistance = 0;\n    availableWidth = availableSpace * (total_elements - 1)\n    if(defaultIndex){\n      changeItem(defaultIndex);\n    }\n  }\n\n\n  $: indicators = Array(total_elements);\n\n  $: {\n    if(autoplay && !run_interval){\n      run_interval = setInterval(changeView , delay);\n    }\n\n    if(!autoplay && run_interval){\n      clearInterval(run_interval)\n      run_interval = false;\n    }\n  }\n\n  // helpers\n  function eventDelegate(type) {\n    let delegationTypes = {\n      add: 'addEventListener',\n      remove: 'removeEventListener'\n    };\n    if (typeof window !== 'undefined') {\n      window[delegationTypes[type]]('mousemove', onMove);\n      window[delegationTypes[type]]('mouseup', onEnd);\n      window[delegationTypes[type]]('touchmove', onMove, {passive:false});\n      window[delegationTypes[type]]('touchend', onEnd, {passive:false});\n    }\n  }\n\n  function normalizeEventBehavior(e) {\n    e && e.preventDefault();\n    e && e.stopImmediatePropagation();\n    e && e.stopPropagation();\n  }\n\n  function generateTranslateValue(value){\n    return  is_vertical ? `translate3d(0, ${value}px, 0)` : `translate3d(${direction_reverse ? -value : value}px, 0, 0)`;\n  }\n\n  function generateTouchPosCss(value, touch_end = false){\n    let transformString = generateTranslateValue(value);\n    let _css = `\n      -webkit-transition-duration: ${touch_end ? transitionDuration : '0'}ms;\n      transition-duration: ${touch_end ? transitionDuration : '0'}ms;\n      -webkit-transform: ${transformString};\n      -ms-transform: ${transformString};`;\n    return _css;\n  }\n\n\n  onMount(() => {\n    init();\n    if (typeof window !== 'undefined') {\n      window.addEventListener('resize', update);\n    }\n  });\n\n\n\n  onDestroy(()=>{\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('resize', update);\n    }\n  })\n\n\n\n  let touch_active = false;\n\n  function onMove(e){\n    if (touch_active) {\n      normalizeEventBehavior(e)\n      let _axis = e.touches ? e.touches[0][page_axis] : e[page_axis],\n        distance = direction_reverse && !is_vertical ? (_axis - axis) + pos_axis : (axis - _axis) + pos_axis;\n      if (distance <= availableWidth && distance >= 0) {\n        [...swipeElements].forEach((element, i) => {\n          element.style.cssText = generateTouchPosCss((availableSpace * i) - distance);\n        });\n        availableDistance = distance;\n        last_axis_pos = _axis;\n      }\n    }\n  }\n\n  function onMoveStart(e){\n    normalizeEventBehavior(e);\n    touch_active = true;\n    longTouch = false;\n    setTimeout(function() {\n      longTouch = true;\n    }, 250);\n    axis = e.touches ? e.touches[0][page_axis] : e[page_axis];\n    eventDelegate('add');\n  }\n\n  function onEnd(e) {\n    normalizeEventBehavior(e)\n    let direction = direction_reverse ? axis > last_axis_pos : axis < last_axis_pos;\n    touch_active = false;\n    let _as = availableSpace;\n    let accidental_touch = Math.round(availableSpace / 50) > Math.abs(axis - last_axis_pos);\n    if(longTouch || accidental_touch){\n      availableDistance = Math.round((availableDistance / _as)) * _as;\n    }else{\n      availableDistance = direction ? Math.floor((availableDistance / _as))  * _as : Math.ceil((availableDistance / _as))  * _as\n    }\n    axis = null;\n    last_axis_pos = null;\n    pos_axis = availableDistance;\n    activeIndicator = (availableDistance / _as);\n    [...swipeElements].forEach((element, i) => {\n      element.style.cssText = generateTouchPosCss((_as * i) - pos_axis, true);\n    });\n\n    active_item = activeIndicator;\n    defaultIndex = active_item;\n    eventDelegate('remove');\n  }\n\n  function changeItem(item) {\n    let max = availableSpace;\n    availableDistance = max * item;\n    activeIndicator = item;\n    onEnd();\n  }\n\n  function changeView() {\n    changeItem(played);\n    played = played < (total_elements - 1) ? ++played : 0;\n  }\n\n  export function goTo(step) {\n    let item = Math.max(0, Math.min(step, indicators.length - 1));\n    changeItem(item)\n  }\n  export function prevItem() {\n    let step = activeIndicator - 1;\n    goTo(step)\n  }\n\n  export function nextItem() {\n    let step = activeIndicator + 1;\n    goTo(step)\n  }\n</script>\n\n<style>\n\n.swipe-panel {\n  position: relative;\n  height: var(--sv-swipe-panel-height, 100%);\n  width: var(--sv-swipe-panel-width, inherit);\n}\n.swipe-item-wrapper{\n  overflow: hidden;\n  position: relative;\n  height: inherit;\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\n  pointer-events: none;\n}\n\n.swipeable-total_elements,\n.swipeable-slot-wrapper {\n  position: relative;\n  width: inherit;\n  height: inherit;\n}\n\n.swipe-handler {\n  width: 100%;\n  position: absolute;\n  top: var(--sv-swipe-handler-top, 0px);\n  bottom: 0px;\n  left: 0;\n  right: 0;\n  background: rgba(0,0,0,0);\n}\n.swipe-indicator {\n  position: relative;\n  bottom: 1.5rem;\n  display: flex;\n  justify-content: center;\n  z-index: var(--sv-swipe-panel-wrapper-index, 2);\n  pointer-events: none;\n}\n\n.dot {\n  height: 10px;\n  width: 10px;\n  background-color: transparent;\n  border: 1px solid grey;\n  border-radius: 50%;\n  display: inline-block;\n  margin: 0px 2px;\n  cursor: pointer;\n  pointer-events: fill;\n}\n.swipe-indicator .is-active {\n  background-color: var(--sv-swipe-indicator-active-color, grey);\n}\n.reverse{\n  direction: rtl;\n}\n\n</style>\n<div class=\"swipe-panel\">\n  <div class=\"swipe-item-wrapper\" bind:this={swipeWrapper}>\n    <div class=\"swipeable-total_elements\">\n      <div class=\"swipeable-slot-wrapper\">\n        <slot />\n      </div>\n    </div>\n  </div>\n  <div class=\"swipe-handler\" bind:this={swipeHandler} on:touchstart={onMoveStart} on:mousedown={onMoveStart}></div>\n   {#if showIndicators}\n     <div class=\"swipe-indicator swipe-indicator-inside\" class:reverse={direction_reverse}>\n        {#each indicators as x, i }\n          <span class=\"dot {activeIndicator == i ? 'is-active' : ''}\" on:click={() => {changeItem(i)}}></span>\n        {/each}\n    </div>\n   {/if}\n\n</div>\n",
    "<script>\n  export let classes = '';\n</script>\n\n<style>\n  .swipeable-item {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    transition-timing-function: ease-out;\n  }\n</style>\n\n<div class=\"swipeable-item {classes}\">\n    <slot />\n</div>"
  ],
  "names": [],
  "mappings": "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"
}